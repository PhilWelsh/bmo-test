[{"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\reportWebVitals.ts":"1","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\index.js":"2","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\App.js":"3","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\ResultsList.js":"4","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\SearchBar.js":"5","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\store.js":"6","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\reducers\\index.js":"7","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\types.js":"8","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\actions\\getRestaurants.js":"9","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\reducers\\restaurantReducers.js":"10","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\ResultCard.js":"11","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\Container.js":"12","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\autoComplete.js":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":500,"mtime":1611879202213,"results":"16","hashOfConfig":"15"},{"size":5587,"mtime":1612228460332,"results":"17","hashOfConfig":"15"},{"size":1362,"mtime":1612222577684,"results":"18","hashOfConfig":"15"},{"size":2689,"mtime":1612228723475,"results":"19","hashOfConfig":"15"},{"size":399,"mtime":1611890026397,"results":"20","hashOfConfig":"15"},{"size":173,"mtime":1612151422595,"results":"21","hashOfConfig":"15"},{"size":147,"mtime":1612221462383,"results":"22","hashOfConfig":"15"},{"size":2439,"mtime":1612226705118,"results":"23","hashOfConfig":"15"},{"size":651,"mtime":1612221479903,"results":"24","hashOfConfig":"15"},{"size":1752,"mtime":1612228348366,"results":"25","hashOfConfig":"15"},{"size":354,"mtime":1612213220043,"results":"26","hashOfConfig":"15"},{"size":4109,"mtime":1612213995117,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vav4st",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\reportWebVitals.ts",[],["60","61"],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\index.js",[],["62","63"],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\App.js",[],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\ResultsList.js",["64"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nimport Container from \"./Container\";\r\n\r\nconst Restaurants = () => {\r\n  const restaurantData = useSelector(({ restaurants }) => {\r\n    return restaurants;\r\n  });\r\n  const { loading, error, restaurants } = restaurantData;\r\n  return (\r\n    <Container>\r\n      {loading\r\n        ? \"Loading...\"\r\n        : error\r\n        ? error.message\r\n        : restaurants.map((r) => <ResultCard key={r.id} restaurant={r} />)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n// const ResultsList = () => {\r\n//   // const useStyles = createUseStyles({\r\n//   //   SearchBar: {\r\n//   //     color: \"red\",\r\n//   //   },\r\n//   // });\r\n//   // const classes = useStyles();\r\n//   return (\r\n//     <div>\r\n//       {/* {results.map((result) => {\r\n//         return <Result result={result} onDelete={onDelete} key={result.id} />;\r\n//       })} */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     results: state,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onDelete: (id) => {\r\n//       dispatch(deleteResult(id));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export default ResultsList(mapStateToProps, mapDispatchToProps)(ResultsList);\r\n","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\SearchBar.js",["65","66","67","68"],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\store.js",[],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\reducers\\index.js",[],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\types.js",[],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\actions\\getRestaurants.js",["69"],"import { GET_RESTAURANTS, RESTAURANTS_ERROR, GET_CITIES } from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getRestaurants = (searchValues) => async (dispatch) => {\r\n  try {\r\n    const exactMatch = false;\r\n    const cityRes = await axios\r\n      .get(`https://developers.zomato.com/api/v2.1/cities`, {\r\n        headers: {\r\n          \"user-key\": process.env.REACT_APP_ZOMATO_API_KEY,\r\n        },\r\n        params: { q: searchValues.city },\r\n      })\r\n      .then(({ data }) => {\r\n        console.log(\"Break\");\r\n        console.log(data);\r\n        const cities = exactMatch\r\n          ? data.location_suggestions.filter(\r\n              (match) => match.name === searchValues.city\r\n            )\r\n          : data.location_suggestions.filter((match) =>\r\n              match.name.toLowerCase().includes(searchValues.city.toLowerCase())\r\n            );\r\n        var params = new URLSearchParams();\r\n        const mappedCityNames = cities.map((c) => {\r\n          params.append(\"city_id\", c.id);\r\n          return c.name;\r\n        });\r\n        if (searchValues.details) {\r\n          params.append(\"q\", searchValues.details);\r\n        }\r\n        dispatch({\r\n          type: GET_CITIES,\r\n          payload: mappedCityNames,\r\n        });\r\n        return axios\r\n          .get(`https://developers.zomato.com/api/v2.1/search`, {\r\n            headers: {\r\n              \"user-key\": process.env.REACT_APP_ZOMATO_API_KEY,\r\n            },\r\n            params: params,\r\n          })\r\n          .then(({ data }) => {\r\n            console.log(data);\r\n            return data.restaurants.map(({ restaurant }) => {\r\n              const {\r\n                id,\r\n                name,\r\n                cuisines,\r\n                price_range,\r\n                user_rating,\r\n                thumb,\r\n                location,\r\n                city,\r\n              } = restaurant;\r\n\r\n              return {\r\n                id: id,\r\n                name: name,\r\n                location: location.address,\r\n                city: location.city,\r\n                cuisines: cuisines,\r\n                price_range: price_range,\r\n                user_rating: user_rating.aggregate_rating,\r\n                thumb: thumb,\r\n              };\r\n            });\r\n          });\r\n      });\r\n    dispatch({\r\n      type: GET_RESTAURANTS,\r\n      payload: cityRes,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: RESTAURANTS_ERROR,\r\n      payload: e,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\store\\reducers\\restaurantReducers.js",["70"],"import { GET_RESTAURANTS, RESTAURANTS_ERROR, GET_CITIES } from \"../types\";\r\n\r\nconst initialState = {\r\n  possibleCities: [],\r\n  restaurants: [],\r\n  loading: true,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_RESTAURANTS:\r\n      return {\r\n        ...state,\r\n        restaurants: action.payload,\r\n        loading: false,\r\n      };\r\n    case RESTAURANTS_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case GET_CITIES:\r\n      return {\r\n        ...state,\r\n        possibleCities: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\ResultCard.js",["71"],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\Container.js",[],"C:\\Users\\Phizs\\Documents\\work\\code\\tests\\bmo\\bmo-test\\src\\components\\autoComplete.js",["72","73","74","75","76","77"],"export default function autocomplete(inp, arr) {\r\n  /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n  var currentFocus;\r\n  /*execute a function when someone writes in the text field:*/\r\n  inp.addEventListener(\"input\", function (e) {\r\n    var a,\r\n      b,\r\n      i,\r\n      val = this.value;\r\n    /*close any already open lists of autocompleted values*/\r\n    closeAllLists();\r\n    if (!val) {\r\n      return false;\r\n    }\r\n    currentFocus = -1;\r\n    /*create a DIV element that will contain the items (values):*/\r\n    a = document.createElement(\"DIV\");\r\n    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n    a.setAttribute(\"class\", \"autocomplete-items\");\r\n    /*append the DIV element as a child of the autocomplete container:*/\r\n    this.parentNode.appendChild(a);\r\n    /*for each item in the array...*/\r\n    for (i = 0; i < arr.length; i++) {\r\n      /*check if the item starts with the same letters as the text field value:*/\r\n      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n        /*create a DIV element for each matching element:*/\r\n        b = document.createElement(\"DIV\");\r\n        /*make the matching letters bold:*/\r\n        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n        b.innerHTML += arr[i].substr(val.length);\r\n        /*insert a input field that will hold the current array item's value:*/\r\n        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n        /*execute a function when someone clicks on the item value (DIV element):*/\r\n        b.addEventListener(\"click\", function (e) {\r\n          /*insert the value for the autocomplete text field:*/\r\n          inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n          /*close the list of autocompleted values,\r\n                (or any other open lists of autocompleted values:*/\r\n          closeAllLists();\r\n        });\r\n        a.appendChild(b);\r\n      }\r\n    }\r\n  });\r\n  /*execute a function presses a key on the keyboard:*/\r\n  inp.addEventListener(\"keydown\", function (e) {\r\n    var x = document.getElementById(this.id + \"autocomplete-list\");\r\n    if (x) x = x.getElementsByTagName(\"div\");\r\n    if (e.keyCode == 40) {\r\n      /*If the arrow DOWN key is pressed,\r\n          increase the currentFocus variable:*/\r\n      currentFocus++;\r\n      /*and and make the current item more visible:*/\r\n      addActive(x);\r\n    } else if (e.keyCode == 38) {\r\n      //up\r\n      /*If the arrow UP key is pressed,\r\n          decrease the currentFocus variable:*/\r\n      currentFocus--;\r\n      /*and and make the current item more visible:*/\r\n      addActive(x);\r\n    } else if (e.keyCode == 13) {\r\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n      e.preventDefault();\r\n      if (currentFocus > -1) {\r\n        /*and simulate a click on the \"active\" item:*/\r\n        if (x) x[currentFocus].click();\r\n      }\r\n    }\r\n  });\r\n  function addActive(x) {\r\n    /*a function to classify an item as \"active\":*/\r\n    if (!x) return false;\r\n    /*start by removing the \"active\" class on all items:*/\r\n    removeActive(x);\r\n    if (currentFocus >= x.length) currentFocus = 0;\r\n    if (currentFocus < 0) currentFocus = x.length - 1;\r\n    /*add class \"autocomplete-active\":*/\r\n    x[currentFocus].classList.add(\"autocomplete-active\");\r\n  }\r\n  function removeActive(x) {\r\n    /*a function to remove the \"active\" class from all autocomplete items:*/\r\n    for (var i = 0; i < x.length; i++) {\r\n      x[i].classList.remove(\"autocomplete-active\");\r\n    }\r\n  }\r\n  function closeAllLists(elmnt) {\r\n    /*close all autocomplete lists in the document,\r\n      except the one passed as an argument:*/\r\n    var x = document.getElementsByClassName(\"autocomplete-items\");\r\n    for (var i = 0; i < x.length; i++) {\r\n      if (elmnt != x[i] && elmnt != inp) {\r\n        x[i].parentNode.removeChild(x[i]);\r\n      }\r\n    }\r\n  }\r\n  /*execute a function when someone clicks in the document:*/\r\n  document.addEventListener(\"click\", function (e) {\r\n    closeAllLists(e.target);\r\n  });\r\n}\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":49,"column":6,"nodeType":"89","endLine":49,"endColumn":20,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":69,"column":13,"nodeType":"93","endLine":69,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":83,"column":13,"nodeType":"93","endLine":83,"endColumn":31},{"ruleId":"82","severity":1,"message":"94","line":54,"column":17,"nodeType":"84","messageId":"85","endLine":54,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":9,"column":1,"nodeType":"97","endLine":30,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":42,"column":9,"nodeType":"100","endLine":51,"endColumn":11},{"ruleId":"101","severity":1,"message":"102","line":26,"column":54,"nodeType":"103","messageId":"104","endLine":26,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":50,"column":19,"nodeType":"103","messageId":"104","endLine":50,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":56,"column":26,"nodeType":"103","messageId":"104","endLine":56,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":63,"column":26,"nodeType":"103","messageId":"104","endLine":63,"endColumn":28},{"ruleId":"101","severity":1,"message":"105","line":93,"column":17,"nodeType":"103","messageId":"104","endLine":93,"endColumn":19},{"ruleId":"101","severity":1,"message":"105","line":93,"column":34,"nodeType":"103","messageId":"104","endLine":93,"endColumn":36},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'createUseStyles' is defined but never used.","Identifier","unusedVar","'autocomplete' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"jsx-a11y/aria-proptypes","The value for aria-label must be a string.","JSXAttribute","'city' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [dispatch, searchValues]",{"range":"111","text":"112"},[1389,1403],"[dispatch, searchValues]"]